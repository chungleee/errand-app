{"version":3,"sources":["components/Header.js","components/TodoList.js","components/InputField.js","utilities/index.js","utilities/customHooks.js","components/AddTodoButton.js","components/TodoCard.js","components/DeleteAllButton.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","TodoList","children","style","margin","InputField","type","name","value","placeholder","onChange","onKeyPress","handleGetItems","cb","window","localStorage","alert","Object","keys","map","key","item","getItem","JSON","parse","useForm","initialValues","useState","values","setValues","event","target","styles","inputs","border","borderBottom","inputControl","marginLeft","marginRight","AddTodoButton","handleModal","modal","errands","setErrands","title","task","handleOnChange","tasks","setTasks","handleAdd","completed","onClick","cursor","onRequestClose","isOpen","closeTimeoutMS","trim","length","newErrand","errandObj","setItem","stringify","handleSetItem","element","idx","console","log","taskToRemove","editedTasks","filter","handleRemove","class","Modal","setAppElement","TodoCard","TodoCard_Icon","TodoCard_Icon_style","position","top","right","TodoCard_Title","TodoCard_Title_style","height","width","TodoCard_Modal_style","content","backgroundColor","todos","setStorage","setModal","removeItem","todo","wordWrap","storage","forEach","errand","handleCompleted","DeleteAllButton","clear","App","useEffect","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d93d518d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <header className=\"tc mv4\">\n      <h1 className=\"f2\">Welcome to the Errands app</h1>\n      <p>Feel free to create your new list of errands!</p>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst TodoList = ({ children }) => {\n  return (\n    <ul\n      className=\"flex flex-wrap ph4 justify-center mw6-ns list\"\n      style={{ margin: 'auto' }}\n    >\n      {children}\n    </ul>\n  )\n}\n\nexport default TodoList\n","import React from 'react'\n\nconst InputField = ({\n  type,\n  name,\n  value,\n  placeholder,\n  className,\n  style,\n  onChange,\n  onKeyPress\n}) => {\n  return (\n    <input\n      type={type}\n      name={name}\n      value={value}\n      placeholder={placeholder}\n      className={className}\n      style={style}\n      onChange={onChange}\n      onKeyPress={onKeyPress}\n    />\n  )\n}\n\nexport default InputField\n","// GET ALL ITEMS FROM LOCALSTORAGE\nexport const handleGetItems = cb => {\n  // check if storage exists\n  // if false\n  if (!window.localStorage) {\n    return alert('Storage unavailable')\n  } else {\n    // if true\n    // loop thru localStorage\n    const keys = Object.keys(localStorage)\n    const json = keys.map(key => {\n      // get every item\n      const item = localStorage.getItem(key)\n      // parse json\n      return JSON.parse(item)\n    })\n    // setStorage\n    cb(json)\n  }\n}\n\n// SAVE ITEM TO LOCAL STORAGE\nexport const handleSetItem = errandObj => {\n  // check if localstorage exists\n  if (!window.localStorage) {\n    // if false - return alert\n    return alert(\"Local Storage doesn't exist\")\n  } else {\n    // if true - set item\n    localStorage.setItem(errandObj.title, JSON.stringify(errandObj))\n  }\n}\n","import { useState } from 'react'\n\n// custom hook to get values\nexport const useForm = initialValues => {\n  // init state\n  const [values, setValues] = useState(initialValues)\n  // on change handler\n  const handleOnChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    })\n  }\n  // return\n  return [values, setValues, handleOnChange]\n}\n","import React, { useState } from 'react'\nimport Modal from 'react-modal'\nimport InputField from './InputField'\nimport { handleSetItem } from '../utilities'\nimport { useForm } from '../utilities/customHooks'\n\nconst AddTodoButton = ({ handleModal, modal, errands, setErrands }) => {\n  // input values and handler from custom hook\n  const [values, setValues, handleOnChange] = useForm({ title: '', task: '' })\n\n  // tasks to display in modal\n  const [tasks, setTasks] = useState([])\n\n  // reset state func\n  const handleReset = () => {\n    setValues({ title: '', task: '' })\n    setTasks([])\n  }\n\n  const handleAdd = () => {\n    const task = {\n      task: values.task,\n      completed: false\n    }\n    setTasks([...tasks, task])\n    setValues({ ...values, task: '' })\n  }\n\n  // removes task from list\n  const handleRemove = taskToRemove => {\n    const editedTasks = tasks.filter(element => {\n      return element.task !== taskToRemove.task\n    })\n    setTasks([...editedTasks])\n  }\n\n  return (\n    <div>\n      <div\n        onClick={handleModal}\n        className=\"h4 b w4 mr3 mb3 ba br4 flex items-center justify-center tc grow .bg-washed-blue b--black\"\n        style={{ cursor: 'pointer' }}\n      >\n        <i className=\"fas fa-plus green\"></i>\n      </div>\n      <Modal\n        onRequestClose={() => {\n          handleModal()\n        }}\n        isOpen={modal}\n        closeTimeoutMS={300}\n      >\n        <h1 className=\"f2 tc red\">Organise your errands</h1>\n        <div\n          className=\"mt3 mb3 mw6-ns flex flex-column items-center\"\n          style={styles.inputControl}\n        >\n          <InputField\n            onChange={handleOnChange}\n            type=\"text\"\n            name=\"title\"\n            value={values.title}\n            placeholder=\"Title\"\n            className=\"input-reset mb3 w-75 h2 f3 tc tracked fw6 i\"\n            style={styles.inputs}\n          />\n          <InputField\n            onChange={handleOnChange}\n            type=\"text\"\n            name=\"task\"\n            value={values.task}\n            placeholder=\"Task\"\n            className=\"input-reset mb3 w-75 h2 f6 tc tracked fw6 i\"\n            style={styles.inputs}\n            onKeyPress={event => {\n              if (\n                event.key === 'Enter' &&\n                event.target.value.trim().length !== 0\n              ) {\n                handleAdd()\n              }\n            }}\n          />\n          <div className=\"mt3\">\n            <button className=\"grow\" onClick={handleAdd}>\n              add\n            </button>\n            <button\n              className=\"grow\"\n              onClick={() => {\n                if (values.title.trim().length === 0 || tasks.length === 0) {\n                  return\n                } else {\n                  const newErrand = {\n                    title: values.title,\n                    errands: tasks\n                  }\n                  setErrands([...errands, newErrand])\n                  handleSetItem(newErrand)\n                  handleReset()\n                  handleModal()\n                }\n              }}\n            >\n              save\n            </button>\n          </div>\n        </div>\n        <div>\n          <h1 className=\"f2 tc\">{values.title}</h1>\n          <ol\n            className=\"flex flex-column items-center list pl0 tc mw6-ns\"\n            style={{ margin: 'auto' }}\n          >\n            {tasks.length <= 0\n              ? null\n              : tasks.map((element, idx) => {\n                  return (\n                    <li className=\"pa1 w-70\" key={idx}>\n                      <div className=\"flex justify-center items-center\">\n                        <p style={{ marginLeft: 'auto' }}>{element.task}</p>\n                        <i\n                          style={{ marginLeft: 'auto', cursor: 'pointer' }}\n                          onClick={() => {\n                            console.log('element', element)\n                            handleRemove(element)\n                          }}\n                          class=\"fas fa-minus-circle\"\n                        ></i>\n                      </div>\n                    </li>\n                  )\n                })}\n          </ol>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\n// styling\nconst styles = {\n  inputs: {\n    border: 'none',\n    borderBottom: '1px solid black'\n  },\n  inputControl: { marginLeft: 'auto', marginRight: 'auto' }\n}\n\nexport default AddTodoButton\n","import React, { useState } from 'react'\nimport Modal from 'react-modal'\nimport { handleGetItems } from '../utilities'\n\nModal.setAppElement('#root')\nconst TodoCard = ({ title, todos, setStorage }) => {\n  // MODAL\n  // modal state\n  const [modal, setModal] = useState(false)\n  // modal trigger func\n  const handleModal = () => {\n    setModal(!modal)\n  }\n\n  // delete errand handler\n  const handleDeleteItem = () => {\n    localStorage.removeItem(title)\n    handleGetItems(setStorage)\n  }\n\n  // handle complete\n  const handleCompleted = todo => {\n    const storage = JSON.parse(localStorage.getItem(title))\n    storage.errands.forEach(errand => {\n      if (errand.task === todo.task) {\n        return (errand.completed = !errand.completed)\n      }\n    })\n    localStorage.setItem(title, JSON.stringify(storage))\n    handleGetItems(setStorage)\n  }\n\n  return (\n    <div>\n      <div className={style.TodoCard}>\n        <span\n          onClick={handleDeleteItem}\n          className={style.TodoCard_Icon}\n          style={style.TodoCard_Icon_style}\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n        </span>\n        <div\n          onClick={() => {\n            handleModal()\n          }}\n          className={style.TodoCard_Title}\n          style={style.TodoCard_Title_style}\n        >\n          {title}\n        </div>\n      </div>\n      <Modal\n        onRequestClose={() => {\n          handleModal()\n        }}\n        isOpen={modal}\n        closeTimeoutMS={300}\n        style={style.TodoCard_Modal_style}\n      >\n        <section className=\"tc h-100 flex flex-column justify-center \">\n          <div className=\"pt3 pb3\">\n            <h1 className=\"f1 red\">{title}</h1>\n          </div>\n          <ul\n            className=\"list pl0 mt3 mb3 flex flex-column items-center w-70 mw6-ns\"\n            style={{ marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            {todos.map((todo, idx) => {\n              return (\n                <li className=\"mt1 mb1 f4 w-70\" key={idx}>\n                  <div className=\"flex justify-center items-center\">\n                    <p\n                      className={todo.completed ? 'strike' : null}\n                      style={{ wordWrap: 'break-word', marginLeft: 'auto' }}\n                    >\n                      {todo.task}\n                    </p>\n                    <i\n                      onClick={() => {\n                        handleCompleted(todo)\n                      }}\n                      style={{ marginLeft: 'auto', cursor: 'pointer' }}\n                      className={\n                        todo.completed ? 'fas fa-check green' : 'fas fa-check'\n                      }\n                    ></i>\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </section>\n      </Modal>\n    </div>\n  )\n}\n\nconst style = {\n  TodoCard: 'h4 w4 ba mr3 mb3 br4 flex items-center justify-center tc grow',\n  TodoCard_Icon: 'red b',\n  TodoCard_Icon_style: {\n    position: 'absolute',\n    top: '10px',\n    right: '12px',\n    cursor: 'pointer'\n  },\n  TodoCard_Title: 'b flex items-center justify-center',\n  TodoCard_Title_style: { cursor: 'pointer', height: '90%', width: '90%' },\n  TodoCard_Modal_style: { content: { backgroundColor: '#FFFCEB' } }\n}\nexport default TodoCard\n","import React from 'react'\nimport { handleGetItems } from '../utilities'\n\nconst DeleteAllButton = ({ setStorage }) => {\n  const handleDeleteAll = () => {\n    localStorage.clear()\n    handleGetItems(setStorage)\n  }\n\n  return (\n    <div>\n      <div\n        onClick={() => {\n          handleDeleteAll()\n        }}\n        className=\"h4 b w4 mr3 mb3 ba br4 flex items-center justify-center tc grow .bg-washed-blue b--black\"\n        style={{ cursor: 'pointer' }}\n      >\n        <i className=\"fas fa-trash-alt red\"></i>\n      </div>\n    </div>\n  )\n}\n\nexport default DeleteAllButton\n","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-modal'\nimport Header from './components/Header'\nimport TodoList from './components/TodoList'\nimport AddTodoButton from './components/AddTodoButton'\nimport TodoCard from './components/TodoCard'\nimport { handleGetItems } from './utilities'\nimport DeleteAllButton from './components/DeleteAllButton'\n\nModal.setAppElement('#root')\nconst App = () => {\n  // MODAL\n  // modal state\n  const [modal, setModal] = useState(false)\n  // modal trigger func\n  const handleModal = () => {\n    setModal(!modal)\n  }\n\n  // ERRANDS\n  const [errands, setErrands] = useState([])\n\n  // STORAGE VALUES\n  const [storage, setStorage] = useState([])\n\n  // component mount\n  useEffect(\n    () => {\n      // gets items from storage on mount\n      handleGetItems(setStorage)\n    },\n    // component updates depending if errands has been added\n    [errands]\n  )\n\n  return (\n    <div>\n      <Header />\n      <TodoList>\n        <AddTodoButton\n          modal={modal}\n          handleModal={handleModal}\n          errands={errands}\n          setErrands={setErrands}\n        />\n        <DeleteAllButton setStorage={setStorage} />\n        {storage.length === 0\n          ? null\n          : storage.map(({ title, errands }, idx) => {\n              return (\n                <TodoCard\n                  setStorage={setStorage}\n                  title={title}\n                  todos={errands}\n                  key={idx}\n                />\n              )\n            })}\n      </TodoList>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}